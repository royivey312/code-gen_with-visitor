Terminals unused in grammar

   Put
   While
   Do
   Prog


Grammar

    0 $accept: program $end

    1 program: pStateDeclSeq

    2 pStateDeclSeq: %empty
    3              | statement SColon pStateDeclSeq
    4              | Var idlist TAssign type SColon pStateDeclSeq

    5 idlist: Ident
    6       | Ident Comma idlist

    7 type: Integer
    8     | RealT
    9     | Boolean
   10     | Record field_list End Record

   11 field_list: idlist TAssign type
   12           | idlist TAssign type SColon field_list

   13 state_decls: %empty
   14            | statement SColon state_decls
   15            | declaration SColon state_decls

   16 declaration: Var idlist TAssign type
   17            | Bind Ident To ref
   18            | Bind Var Ident To ref

   19 statement: ref Assign expr
   20          | Assert bool_expr
   21          | Begin state_decls End Loop
   22          | Loop state_decls End Loop
   23          | Exit
   24          | Exit When bool_expr
   25          | If bool_expr Then state_decls end_if

   26 ref: Ident
   27    | Ident Dot Ident

   28 end_if: End If
   29       | Else state_decls End If
   30       | ElseIf bool_expr Then state_decls end_if

   31 expr: expr Or and_expr
   32     | not_expr

   33 and_expr: and_expr And not_expr
   34         | not_expr

   35 not_expr: Not not_expr
   36         | rel_expr

   37 rel_expr: sum
   38         | rel_expr Eq sum
   39         | rel_expr Ne sum
   40         | rel_expr Lt sum
   41         | rel_expr Le sum
   42         | rel_expr Gt sum
   43         | rel_expr Ge sum

   44 bool_expr: expr

   45 sum: prod
   46    | sum Plus prod
   47    | sum Minus prod

   48 prod: factor
   49     | prod Star factor
   50     | prod Slash factor
   51     | prod Div factor
   52     | prod Mod factor

   53 factor: Plus basic
   54       | Minus basic
   55       | basic

   56 basic: ref
   57      | LParen expr RParen
   58      | IntConst
   59      | Real


Terminals, with rules where they appear

$end (0) 0
Ident (1) 5 6 17 18 26 27
IntConst (2) 58
Exit (3) 23 24
When (4) 24
Begin (5) 21
Bind (6) 17 18
Record (7) 10
Mod (8) 52
Put (9)
Assert (10) 20
Then (12) 25 30
End (13) 10 21 22 28 29
While (14)
Do (15)
Else (16) 29
ElseIf (17) 30
Loop (18) 21 22
To (19) 17 18
TAssign (20) 4 11 12 16
Assign (21) 19
LParen (22) 57
RParen (23) 57
Plus (24) 46 53
Minus (25) 47 54
Star (26) 49
Slash (27) 50
Eq (28) 38
Ne (29) 39
Lt (30) 40
Le (31) 41
Gt (32) 42
Ge (33) 43
Var (41) 4 16 18
Integer (42) 7
Boolean (43) 9
Prog (44)
Comma (45) 6
Dot (46) 27
Real (47) 59
Not (48) 35
And (49) 33
Or (50) 31
If (51) 25 28 29
SColon (52) 3 4 12 14 15
RealT (53) 8
Div (54) 51
error (256)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
pStateDeclSeq (51)
    on left: 2 3 4, on right: 1 3 4
idlist (52)
    on left: 5 6, on right: 4 6 11 12 16
type (53)
    on left: 7 8 9 10, on right: 4 11 12 16
field_list (54)
    on left: 11 12, on right: 10 12
state_decls (55)
    on left: 13 14 15, on right: 14 15 21 22 25 29 30
declaration (56)
    on left: 16 17 18, on right: 15
statement (57)
    on left: 19 20 21 22 23 24 25, on right: 3 14
ref (58)
    on left: 26 27, on right: 17 18 19 56
end_if (59)
    on left: 28 29 30, on right: 25 30
expr (60)
    on left: 31 32, on right: 19 31 44 57
and_expr (61)
    on left: 33 34, on right: 31 33
not_expr (62)
    on left: 35 36, on right: 32 33 34 35
rel_expr (63)
    on left: 37 38 39 40 41 42 43, on right: 36 38 39 40 41 42 43
bool_expr (64)
    on left: 44, on right: 20 24 25 30
sum (65)
    on left: 45 46 47, on right: 37 38 39 40 41 42 43 46 47
prod (66)
    on left: 48 49 50 51 52, on right: 45 46 47 49 50 51 52
factor (67)
    on left: 53 54 55, on right: 48 49 50 51 52
basic (68)
    on left: 56 57 58 59, on right: 53 54 55


State 0

    0 $accept: . program $end

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 6
    If      shift, and go to state 7

    $default  reduce using rule 2 (pStateDeclSeq)

    program        go to state 8
    pStateDeclSeq  go to state 9
    statement      go to state 10
    ref            go to state 11


State 1

   26 ref: Ident .
   27    | Ident . Dot Ident

    Dot  shift, and go to state 12

    $default  reduce using rule 26 (ref)


State 2

   23 statement: Exit .
   24          | Exit . When bool_expr

    When  shift, and go to state 13

    $default  reduce using rule 23 (statement)


State 3

   21 statement: Begin . state_decls End Loop

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 16
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 4

   20 statement: Assert . bool_expr

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref        go to state 25
    expr       go to state 26
    not_expr   go to state 27
    rel_expr   go to state 28
    bool_expr  go to state 29
    sum        go to state 30
    prod       go to state 31
    factor     go to state 32
    basic      go to state 33


State 5

   22 statement: Loop . state_decls End Loop

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 34
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 6

    4 pStateDeclSeq: Var . idlist TAssign type SColon pStateDeclSeq

    Ident  shift, and go to state 35

    idlist  go to state 36


State 7

   25 statement: If . bool_expr Then state_decls end_if

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref        go to state 25
    expr       go to state 26
    not_expr   go to state 27
    rel_expr   go to state 28
    bool_expr  go to state 37
    sum        go to state 30
    prod       go to state 31
    factor     go to state 32
    basic      go to state 33


State 8

    0 $accept: program . $end

    $end  shift, and go to state 38


State 9

    1 program: pStateDeclSeq .

    $default  reduce using rule 1 (program)


State 10

    3 pStateDeclSeq: statement . SColon pStateDeclSeq

    SColon  shift, and go to state 39


State 11

   19 statement: ref . Assign expr

    Assign  shift, and go to state 40


State 12

   27 ref: Ident Dot . Ident

    Ident  shift, and go to state 41


State 13

   24 statement: Exit When . bool_expr

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref        go to state 25
    expr       go to state 26
    not_expr   go to state 27
    rel_expr   go to state 28
    bool_expr  go to state 42
    sum        go to state 30
    prod       go to state 31
    factor     go to state 32
    basic      go to state 33


State 14

   17 declaration: Bind . Ident To ref
   18            | Bind . Var Ident To ref

    Ident  shift, and go to state 43
    Var    shift, and go to state 44


State 15

   16 declaration: Var . idlist TAssign type

    Ident  shift, and go to state 35

    idlist  go to state 45


State 16

   21 statement: Begin state_decls . End Loop

    End  shift, and go to state 46


State 17

   15 state_decls: declaration . SColon state_decls

    SColon  shift, and go to state 47


State 18

   14 state_decls: statement . SColon state_decls

    SColon  shift, and go to state 48


State 19

   58 basic: IntConst .

    $default  reduce using rule 58 (basic)


State 20

   57 basic: LParen . expr RParen

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref       go to state 25
    expr      go to state 49
    not_expr  go to state 27
    rel_expr  go to state 28
    sum       go to state 30
    prod      go to state 31
    factor    go to state 32
    basic     go to state 33


State 21

   53 factor: Plus . basic

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Real      shift, and go to state 23

    ref    go to state 25
    basic  go to state 50


State 22

   54 factor: Minus . basic

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Real      shift, and go to state 23

    ref    go to state 25
    basic  go to state 51


State 23

   59 basic: Real .

    $default  reduce using rule 59 (basic)


State 24

   35 not_expr: Not . not_expr

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref       go to state 25
    not_expr  go to state 52
    rel_expr  go to state 28
    sum       go to state 30
    prod      go to state 31
    factor    go to state 32
    basic     go to state 33


State 25

   56 basic: ref .

    $default  reduce using rule 56 (basic)


State 26

   31 expr: expr . Or and_expr
   44 bool_expr: expr .

    Or  shift, and go to state 53

    $default  reduce using rule 44 (bool_expr)


State 27

   32 expr: not_expr .

    $default  reduce using rule 32 (expr)


State 28

   36 not_expr: rel_expr .
   38 rel_expr: rel_expr . Eq sum
   39         | rel_expr . Ne sum
   40         | rel_expr . Lt sum
   41         | rel_expr . Le sum
   42         | rel_expr . Gt sum
   43         | rel_expr . Ge sum

    Eq  shift, and go to state 54
    Ne  shift, and go to state 55
    Lt  shift, and go to state 56
    Le  shift, and go to state 57
    Gt  shift, and go to state 58
    Ge  shift, and go to state 59

    $default  reduce using rule 36 (not_expr)


State 29

   20 statement: Assert bool_expr .

    $default  reduce using rule 20 (statement)


State 30

   37 rel_expr: sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 37 (rel_expr)


State 31

   45 sum: prod .
   49 prod: prod . Star factor
   50     | prod . Slash factor
   51     | prod . Div factor
   52     | prod . Mod factor

    Mod    shift, and go to state 62
    Star   shift, and go to state 63
    Slash  shift, and go to state 64
    Div    shift, and go to state 65

    $default  reduce using rule 45 (sum)


State 32

   48 prod: factor .

    $default  reduce using rule 48 (prod)


State 33

   55 factor: basic .

    $default  reduce using rule 55 (factor)


State 34

   22 statement: Loop state_decls . End Loop

    End  shift, and go to state 66


State 35

    5 idlist: Ident .
    6       | Ident . Comma idlist

    Comma  shift, and go to state 67

    $default  reduce using rule 5 (idlist)


State 36

    4 pStateDeclSeq: Var idlist . TAssign type SColon pStateDeclSeq

    TAssign  shift, and go to state 68


State 37

   25 statement: If bool_expr . Then state_decls end_if

    Then  shift, and go to state 69


State 38

    0 $accept: program $end .

    $default  accept


State 39

    3 pStateDeclSeq: statement SColon . pStateDeclSeq

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 6
    If      shift, and go to state 7

    $default  reduce using rule 2 (pStateDeclSeq)

    pStateDeclSeq  go to state 70
    statement      go to state 10
    ref            go to state 11


State 40

   19 statement: ref Assign . expr

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref       go to state 25
    expr      go to state 71
    not_expr  go to state 27
    rel_expr  go to state 28
    sum       go to state 30
    prod      go to state 31
    factor    go to state 32
    basic     go to state 33


State 41

   27 ref: Ident Dot Ident .

    $default  reduce using rule 27 (ref)


State 42

   24 statement: Exit When bool_expr .

    $default  reduce using rule 24 (statement)


State 43

   17 declaration: Bind Ident . To ref

    To  shift, and go to state 72


State 44

   18 declaration: Bind Var . Ident To ref

    Ident  shift, and go to state 73


State 45

   16 declaration: Var idlist . TAssign type

    TAssign  shift, and go to state 74


State 46

   21 statement: Begin state_decls End . Loop

    Loop  shift, and go to state 75


State 47

   15 state_decls: declaration SColon . state_decls

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 76
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 48

   14 state_decls: statement SColon . state_decls

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 77
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 49

   31 expr: expr . Or and_expr
   57 basic: LParen expr . RParen

    RParen  shift, and go to state 78
    Or      shift, and go to state 53


State 50

   53 factor: Plus basic .

    $default  reduce using rule 53 (factor)


State 51

   54 factor: Minus basic .

    $default  reduce using rule 54 (factor)


State 52

   35 not_expr: Not not_expr .

    $default  reduce using rule 35 (not_expr)


State 53

   31 expr: expr Or . and_expr

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref       go to state 25
    and_expr  go to state 79
    not_expr  go to state 80
    rel_expr  go to state 28
    sum       go to state 30
    prod      go to state 31
    factor    go to state 32
    basic     go to state 33


State 54

   38 rel_expr: rel_expr Eq . sum

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    sum     go to state 81
    prod    go to state 31
    factor  go to state 32
    basic   go to state 33


State 55

   39 rel_expr: rel_expr Ne . sum

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    sum     go to state 82
    prod    go to state 31
    factor  go to state 32
    basic   go to state 33


State 56

   40 rel_expr: rel_expr Lt . sum

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    sum     go to state 83
    prod    go to state 31
    factor  go to state 32
    basic   go to state 33


State 57

   41 rel_expr: rel_expr Le . sum

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    sum     go to state 84
    prod    go to state 31
    factor  go to state 32
    basic   go to state 33


State 58

   42 rel_expr: rel_expr Gt . sum

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    sum     go to state 85
    prod    go to state 31
    factor  go to state 32
    basic   go to state 33


State 59

   43 rel_expr: rel_expr Ge . sum

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    sum     go to state 86
    prod    go to state 31
    factor  go to state 32
    basic   go to state 33


State 60

   46 sum: sum Plus . prod

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    prod    go to state 87
    factor  go to state 32
    basic   go to state 33


State 61

   47 sum: sum Minus . prod

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    prod    go to state 88
    factor  go to state 32
    basic   go to state 33


State 62

   52 prod: prod Mod . factor

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    factor  go to state 89
    basic   go to state 33


State 63

   49 prod: prod Star . factor

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    factor  go to state 90
    basic   go to state 33


State 64

   50 prod: prod Slash . factor

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    factor  go to state 91
    basic   go to state 33


State 65

   51 prod: prod Div . factor

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23

    ref     go to state 25
    factor  go to state 92
    basic   go to state 33


State 66

   22 statement: Loop state_decls End . Loop

    Loop  shift, and go to state 93


State 67

    6 idlist: Ident Comma . idlist

    Ident  shift, and go to state 35

    idlist  go to state 94


State 68

    4 pStateDeclSeq: Var idlist TAssign . type SColon pStateDeclSeq

    Record   shift, and go to state 95
    Integer  shift, and go to state 96
    Boolean  shift, and go to state 97
    RealT    shift, and go to state 98

    type  go to state 99


State 69

   25 statement: If bool_expr Then . state_decls end_if

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 100
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 70

    3 pStateDeclSeq: statement SColon pStateDeclSeq .

    $default  reduce using rule 3 (pStateDeclSeq)


State 71

   19 statement: ref Assign expr .
   31 expr: expr . Or and_expr

    Or  shift, and go to state 53

    $default  reduce using rule 19 (statement)


State 72

   17 declaration: Bind Ident To . ref

    Ident  shift, and go to state 1

    ref  go to state 101


State 73

   18 declaration: Bind Var Ident . To ref

    To  shift, and go to state 102


State 74

   16 declaration: Var idlist TAssign . type

    Record   shift, and go to state 95
    Integer  shift, and go to state 96
    Boolean  shift, and go to state 97
    RealT    shift, and go to state 98

    type  go to state 103


State 75

   21 statement: Begin state_decls End Loop .

    $default  reduce using rule 21 (statement)


State 76

   15 state_decls: declaration SColon state_decls .

    $default  reduce using rule 15 (state_decls)


State 77

   14 state_decls: statement SColon state_decls .

    $default  reduce using rule 14 (state_decls)


State 78

   57 basic: LParen expr RParen .

    $default  reduce using rule 57 (basic)


State 79

   31 expr: expr Or and_expr .
   33 and_expr: and_expr . And not_expr

    And  shift, and go to state 104

    $default  reduce using rule 31 (expr)


State 80

   34 and_expr: not_expr .

    $default  reduce using rule 34 (and_expr)


State 81

   38 rel_expr: rel_expr Eq sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 38 (rel_expr)


State 82

   39 rel_expr: rel_expr Ne sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 39 (rel_expr)


State 83

   40 rel_expr: rel_expr Lt sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 40 (rel_expr)


State 84

   41 rel_expr: rel_expr Le sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 41 (rel_expr)


State 85

   42 rel_expr: rel_expr Gt sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 42 (rel_expr)


State 86

   43 rel_expr: rel_expr Ge sum .
   46 sum: sum . Plus prod
   47    | sum . Minus prod

    Plus   shift, and go to state 60
    Minus  shift, and go to state 61

    $default  reduce using rule 43 (rel_expr)


State 87

   46 sum: sum Plus prod .
   49 prod: prod . Star factor
   50     | prod . Slash factor
   51     | prod . Div factor
   52     | prod . Mod factor

    Mod    shift, and go to state 62
    Star   shift, and go to state 63
    Slash  shift, and go to state 64
    Div    shift, and go to state 65

    $default  reduce using rule 46 (sum)


State 88

   47 sum: sum Minus prod .
   49 prod: prod . Star factor
   50     | prod . Slash factor
   51     | prod . Div factor
   52     | prod . Mod factor

    Mod    shift, and go to state 62
    Star   shift, and go to state 63
    Slash  shift, and go to state 64
    Div    shift, and go to state 65

    $default  reduce using rule 47 (sum)


State 89

   52 prod: prod Mod factor .

    $default  reduce using rule 52 (prod)


State 90

   49 prod: prod Star factor .

    $default  reduce using rule 49 (prod)


State 91

   50 prod: prod Slash factor .

    $default  reduce using rule 50 (prod)


State 92

   51 prod: prod Div factor .

    $default  reduce using rule 51 (prod)


State 93

   22 statement: Loop state_decls End Loop .

    $default  reduce using rule 22 (statement)


State 94

    6 idlist: Ident Comma idlist .

    $default  reduce using rule 6 (idlist)


State 95

   10 type: Record . field_list End Record

    Ident  shift, and go to state 35

    idlist      go to state 105
    field_list  go to state 106


State 96

    7 type: Integer .

    $default  reduce using rule 7 (type)


State 97

    9 type: Boolean .

    $default  reduce using rule 9 (type)


State 98

    8 type: RealT .

    $default  reduce using rule 8 (type)


State 99

    4 pStateDeclSeq: Var idlist TAssign type . SColon pStateDeclSeq

    SColon  shift, and go to state 107


State 100

   25 statement: If bool_expr Then state_decls . end_if

    End     shift, and go to state 108
    Else    shift, and go to state 109
    ElseIf  shift, and go to state 110

    end_if  go to state 111


State 101

   17 declaration: Bind Ident To ref .

    $default  reduce using rule 17 (declaration)


State 102

   18 declaration: Bind Var Ident To . ref

    Ident  shift, and go to state 1

    ref  go to state 112


State 103

   16 declaration: Var idlist TAssign type .

    $default  reduce using rule 16 (declaration)


State 104

   33 and_expr: and_expr And . not_expr

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref       go to state 25
    not_expr  go to state 113
    rel_expr  go to state 28
    sum       go to state 30
    prod      go to state 31
    factor    go to state 32
    basic     go to state 33


State 105

   11 field_list: idlist . TAssign type
   12           | idlist . TAssign type SColon field_list

    TAssign  shift, and go to state 114


State 106

   10 type: Record field_list . End Record

    End  shift, and go to state 115


State 107

    4 pStateDeclSeq: Var idlist TAssign type SColon . pStateDeclSeq

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 6
    If      shift, and go to state 7

    $default  reduce using rule 2 (pStateDeclSeq)

    pStateDeclSeq  go to state 116
    statement      go to state 10
    ref            go to state 11


State 108

   28 end_if: End . If

    If  shift, and go to state 117


State 109

   29 end_if: Else . state_decls End If

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 118
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 110

   30 end_if: ElseIf . bool_expr Then state_decls end_if

    Ident     shift, and go to state 1
    IntConst  shift, and go to state 19
    LParen    shift, and go to state 20
    Plus      shift, and go to state 21
    Minus     shift, and go to state 22
    Real      shift, and go to state 23
    Not       shift, and go to state 24

    ref        go to state 25
    expr       go to state 26
    not_expr   go to state 27
    rel_expr   go to state 28
    bool_expr  go to state 119
    sum        go to state 30
    prod       go to state 31
    factor     go to state 32
    basic      go to state 33


State 111

   25 statement: If bool_expr Then state_decls end_if .

    $default  reduce using rule 25 (statement)


State 112

   18 declaration: Bind Var Ident To ref .

    $default  reduce using rule 18 (declaration)


State 113

   33 and_expr: and_expr And not_expr .

    $default  reduce using rule 33 (and_expr)


State 114

   11 field_list: idlist TAssign . type
   12           | idlist TAssign . type SColon field_list

    Record   shift, and go to state 95
    Integer  shift, and go to state 96
    Boolean  shift, and go to state 97
    RealT    shift, and go to state 98

    type  go to state 120


State 115

   10 type: Record field_list End . Record

    Record  shift, and go to state 121


State 116

    4 pStateDeclSeq: Var idlist TAssign type SColon pStateDeclSeq .

    $default  reduce using rule 4 (pStateDeclSeq)


State 117

   28 end_if: End If .

    $default  reduce using rule 28 (end_if)


State 118

   29 end_if: Else state_decls . End If

    End  shift, and go to state 122


State 119

   30 end_if: ElseIf bool_expr . Then state_decls end_if

    Then  shift, and go to state 123


State 120

   11 field_list: idlist TAssign type .
   12           | idlist TAssign type . SColon field_list

    SColon  shift, and go to state 124

    $default  reduce using rule 11 (field_list)


State 121

   10 type: Record field_list End Record .

    $default  reduce using rule 10 (type)


State 122

   29 end_if: Else state_decls End . If

    If  shift, and go to state 125


State 123

   30 end_if: ElseIf bool_expr Then . state_decls end_if

    Ident   shift, and go to state 1
    Exit    shift, and go to state 2
    Begin   shift, and go to state 3
    Bind    shift, and go to state 14
    Assert  shift, and go to state 4
    Loop    shift, and go to state 5
    Var     shift, and go to state 15
    If      shift, and go to state 7

    $default  reduce using rule 13 (state_decls)

    state_decls  go to state 126
    declaration  go to state 17
    statement    go to state 18
    ref          go to state 11


State 124

   12 field_list: idlist TAssign type SColon . field_list

    Ident  shift, and go to state 35

    idlist      go to state 105
    field_list  go to state 127


State 125

   29 end_if: Else state_decls End If .

    $default  reduce using rule 29 (end_if)


State 126

   30 end_if: ElseIf bool_expr Then state_decls . end_if

    End     shift, and go to state 108
    Else    shift, and go to state 109
    ElseIf  shift, and go to state 110

    end_if  go to state 128


State 127

   12 field_list: idlist TAssign type SColon field_list .

    $default  reduce using rule 12 (field_list)


State 128

   30 end_if: ElseIf bool_expr Then state_decls end_if .

    $default  reduce using rule 30 (end_if)
